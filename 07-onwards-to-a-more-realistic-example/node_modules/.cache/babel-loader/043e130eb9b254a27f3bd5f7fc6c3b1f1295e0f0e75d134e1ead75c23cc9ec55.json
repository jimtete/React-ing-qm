{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function useHttp(requestConfig, applyData) {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequests = useCallback(async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  });\n  return {\n    isLoading,\n    error,\n    sendRequests\n  };\n}\n_s(useHttp, \"7YeY5ROoMygY7pP+Aj45hWEL9fQ=\");","map":{"version":3,"names":["useState","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequests","useCallback","taskText","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/home/ADDC/jimtete/GitHub/React-ing-qm/07-onwards-to-a-more-realistic-example/src/hooks/use-http.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function useHttp(requestConfig, applyData) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequests = useCallback(async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method:requestConfig.method ?  requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body:requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  });\n\n  return {\n    isLoading,\n    error,\n    sendRequests\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,OAAO,CAACC,aAAa,EAAEC,SAAS,EAAE;EAAA;EACxD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,YAAY,GAAGC,WAAW,CAAC,MAAOC,QAAQ,IAAK;IACnDL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACV,aAAa,CAACW,GAAG,EAAE;QAC9CC,MAAM,EAACZ,aAAa,CAACY,MAAM,GAAIZ,aAAa,CAACY,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEb,aAAa,CAACa,OAAO,GAAGb,aAAa,CAACa,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAACd,aAAa,CAACc,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAChB,aAAa,CAACc,IAAI,CAAC,GAAG;MACjE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAClCnB,SAAS,CAACkB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,CAAC;EAEF,OAAO;IACLD,SAAS;IACTE,KAAK;IACLE;EACF,CAAC;AACH;AAAC,GA/BuBP,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}