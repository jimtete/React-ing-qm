{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport default function useCounter() {\n  _s();\n  let forwards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (forwards) {\n        setCounter(prevCounter => prevCounter + 1);\n      } else {\n        setCounter(prevCounter => prevCounter - 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return counter;\n}\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");","map":{"version":3,"names":["useState","useEffect","useCounter","forwards","counter","setCounter","interval","setInterval","prevCounter","clearInterval"],"sources":["/home/ADDC/jimtete/GitHub/React-ing-qm/06-starting-project/src/hooks/use-counter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useCounter(forwards = true) {\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (forwards) {\n        setCounter((prevCounter) => prevCounter + 1);\n      } else {\n        setCounter((prevCounter) => prevCounter - 1);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return counter;\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,UAAU,GAAkB;EAAA;EAAA,IAAjBC,QAAQ,uEAAG,IAAI;EAChD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIJ,QAAQ,EAAE;QACZE,UAAU,CAAEG,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;MAC9C,CAAC,MAAM;QACLH,UAAU,CAAEG,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;MAC9C;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,OAAO;AAChB;AAAC,GAhBuBF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}